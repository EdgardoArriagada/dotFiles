# Chage C-b for C-f
unbind C-b
set-option -g prefix C-f
bind C-f send-prefix

# reduce escape time (default is 500ms)
set-option -sg escape-time 10

# Open new panes and windows in curren working dir
bind s split-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

bind c new-window -c "#{pane_current_path}"

# Send pane to selected window
bind T command-prompt -p "Send pane to:" "join-pane -t '%1' ; select-window -t '%1'"
# Choose a pane to join with current one
bind < split-window -h \; choose-window 'kill-pane ; join-pane -hs %%'
# Swap current window with the lowest-numbered window
bind g swap-window -t:^\; select-window -t:1
# Join current pane with the lowest-numbered window panes
bind G join-pane -t:^\; select-window -t:^
# Swap current window with the next
bind J swap-window -t -1\; select-window -t -1
# Swap current window with the previous
bind K swap-window -t +1\; select-window -t +1
# Select lowest numbered window
bind 0 select-window -t:^
# Select highest numbered window
bind 9 select-window -t:$

# Chrome like tab ceration and close
bind -n M-t new-window -c "#{pane_current_path}"
bind -n M-w send-keys C-d

# Chrome like switch tabs
bind -n M-0 select-window -t:^
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t:$

# Switch sessions
bind -n Pageup switch-client -n
bind -n Pagedown switch-client -p

# skip prefixes
bind -n M-n next-window
bind -n M-b previous-window
bind -n M-z resize-pane -Z

# resize panes
bind Left resize-pane -L  30
bind Right resize-pane -R 30
bind Up resize-pane -U 30
bind Down resize-pane -D 30

bind -n M-Left resize-pane -L
bind -n M-Right resize-pane -R
bind -n M-Up resize-pane -U
bind -n M-Down resize-pane -D

# make ] copy mode like [
bind ] copy-mode

# choose between sessions without prefix
bind -n M-s choose-tree -Zs

# Enable vim mode
set -g mode-keys vi


# http://man.openbsd.org/OpenBSD-current/man1/tmux.1#Command
set -g copy-command 'zsb_clipcopy'

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi V send -X select-line
# see https://github.com/EdgardoArriagada/.zsh-spell-book/blob/master/src/charms/zsb_charm_tmux_yank
bind -T copy-mode-vi y {
  send -X other-end
  if -F '#{selection_active}' {
    send -X copy-selection
  } {
    send -X pipe 'zsb_charm_tmux_yank'
  }
}
bind -T copy-mode-vi x {
  if -F '#{selection_active}' {
    send -X other-end
  } {
    send -X select-line
    send -X other-end
  }
  send -X pipe 'zsb_charm_tmux_urlopen'
}
bind -T copy-mode-vi Y {
  send -X begin-selection
  send -X end-of-line
  send -X other-end
  send -X copy-pipe
}
bind -T copy-mode-vi C send -X stop-selection
bind -T copy-mode-vi c send -X clear-selection
bind -T copy-mode-vi m send -X set-mark
bind -T copy-mode-vi "'" send -X jump-to-mark
bind -T copy-mode-vi 'C-v' {
  send -X begin-selection
  send -X rectangle-toggle
}

# http://man.openbsd.org/OpenBSD-current/man1/tmux.1#Command
# When hovering a file from a ripgrep search, visualize it
# (tightly coupled with zsb_charm_if_file_nvim)
# see https://github.com/EdgardoArriagada/.zsh-spell-book/blob/master/src/charms/zsb_charm_if_file_nvim
bind -T copy-mode-vi 'C-g' {
  send -X select-line
  send -X search-backward '^[^0-9]'
  send -X other-end
  send -X other-end
  send -X pipe 'sd "\n" "§" | sd "§$" "" | sd "§.*§" "§" | xargs -0 tmux new-window -c "#{pane_current_path}" zsb_charm_if_file_nvim'
}

# Prevent tmux from scrolling to the bottom after selecting some text
unbind -T copy-mode-vi MouseDragEnd1Pane

# Copy mode shortcuts
bind / copy-mode \; command-prompt -ip "/" "send -X search-forward-incremental \"%%%\""
bind k copy-mode \; send -X cursor-up
bind j copy-mode \; send -X cursor-down
bind M copy-mode \; send -X middle-line
bind C-u copy-mode \; send -X halfpage-up
bind C-d copy-mode \; send -X halfpage-down

### On window closed ###
# Renumber windows
set -g renumber-windows on

# Miscellaneous
set -g base-index 1 # start windows at 1, not 0
set -g history-limit 50000
set -g mouse off
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ',*:Tc' # this fix the 256 color
bind e source-file ~/.tmux.conf \; display " Reloaded!"
set -s command-alias[0] q='kill-window'
bind o send-keys -R \; clear-history \; display -d 300 " clear history"
bind r swap-pane -U
bind -n M-o clear-history \; display -d 300 " clear history only"

bind -n M-q display-panes -d 300

# Docker
bind 8 confirm-before -p "Reload this docker-compose? [Y/n]" "send-keys C-c ' docker-compose down; docker-compose up' C-m"

# Popups
bind -n M-j popup -E -h90% -w90% 'btop'
bind -n M-\; popup -E -h90% -w90% 'tmux new-session -c "#{pane_current_path}"'
bind -n M-g popup -E -h90% -w90% 'tmux new-session -c "#{pane_current_path}" "tig" \; rename-window "#{b:pane_current_path}"'
bind m popup -E -h100% -w100% 'unimatrix -ccyan'
bind -n M-y popup -E -h39 -w68 "cal `date +%Y` && printf '\e[4 q' && read -qs"
bind -n M-l popup -E -h90% -w90% 'exec $SHELL -lc "nvim \$ZSB_GTD_FILE"'

set-option -g focus-events on


##################### THEME ########################
set -g status-position top

%hidden primaryColour=colour1
%hidden secondaryColour=colour9
%hidden tertiaryColour=colour2
%hidden hlColour=colour3
%hidden gray0='#60728a'

%hidden fgColour=colour6
%hidden bgColour='#242933'

set-hook -g pane-mode-changed "if -F '#{m/r:(copy|view)-mode,#{pane_mode}}' \
\"set -a status-right '#[fg=#{fgColour},bg=#{bgColour}]#([[ #{pane_mode} =~ '(copy|view)-mode' ]] && repeatstr #{window_width} ▒)\" \
  'set -u status-right'"

# copy-mode-vi
set -g mode-style 'bg=#444444, fg=#777777, noreverse'

# Pane border
set -g pane-border-style fg='#{bgColour}'
set -g pane-active-border-style fg='#{fgColour}'

# Pane Background
set -g window-style bg='terminal'

# Message text
set -g message-style bg='#{fgColour}',fg='#{bgColour}'

# Status line
set -g status-style bg='#{bgColour}',fg='#{fgColour}'
set -g status-interval 60

# Status left
# https://man7.org/linux/man-pages/man1/tmux.1.html#FORMATS
set -g status-left '#{?client_prefix,#[bg=#{bgColour}]#[fg=#{primaryColour}],}#[bg=#{fgColour}]#[fg=#{bgColour}]#{?client_prefix,#[bg=#{primaryColour}]#[fg=#{bgColour}],}󰝨 #{session_windows}#[bg=#{bgColour}]#[fg=#{fgColour}]#{?client_prefix,#[bg=#{bgColour}]#[fg=#{primaryColour}],}'
# Are we zoomed into a pane?
set -ga status-left '#[bg=#{bgColour}]#[fg=#{secondaryColour}] #{?window_zoomed_flag,❨ᛄ❩ , }'

# Tab styles
set -g window-status-style fg='#{fgColour}',bg='#{bgColour}'
set -g window-status-format ' #W '
set -g window-status-current-format ' #W '

## copy paste from previous sets
set -s command-alias[1] clear-highlight="set window-status-style fg='#{fgColour}',bg='#{bgColour}'"

## defined based on previous tab styles
set -s command-alias[2] highlight="set window-status-style fg='#{hlColour}',bg='#{bgColour}'"

# Status right
set -g status-right-length 200
set -g status-right '#[fg=#{gray0},bg=#{bgColour}]'
set -ga status-right '󰅒 #(uptime | sed -E "s/.*up ([^,]*),.*/\1/")  󰓹 #S  '
set -ga status-right '#[fg=#{tertiaryColour}]#[bg=#{tertiaryColour}]#[fg=#{bgColour}]󰨇 #(tmux list-sessions | wc -l | xargs)#[bg=#{bgColour}]#[fg=#{tertiaryColour}]'

##################### THEME BASED BINDS ########################

bind h highlight
bind R command-prompt -I "#W" { rename-window "%%" }
bind H command-prompt -I "#W" { rename-window "%%" } \; highlight
bind c set automatic-rename \; clear-highlight

##################### PLUGINS ########################
# tmux-jump
set -g @plugin 'schasse/tmux-jump'
set -g @jump-key 'S'
# nvim-tmux-navigator
set -g @plugin 'christoomey/vim-tmux-navigator'


# plugins manager
run -b '~/.tmux/plugins/tpm/tpm'
